plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.wenroe'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    implementation 'org.flywaydb:flyway-core'

    runtimeOnly 'org.postgresql:postgresql'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

// Load .env file and pass to bootRun
def envFile = file('.env')
def envMap = [:]
if (envFile.exists()) {
    envFile.eachLine { line ->
        line = line.trim()
        if (line && !line.startsWith('#') && line.contains('=')) {
            def parts = line.split('=', 2)
            if (parts.length == 2) {
                envMap[parts[0].trim()] = parts[1].trim()
            }
        }
    }
    println "Loaded ${envMap.size()} variables from .env"
}

bootRun {
    environment = envMap
}

tasks.named('test') {
    useJUnitPlatform()
}